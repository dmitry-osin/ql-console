"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerKillEvent = void 0;
var HoldableType_1 = require("./types/HoldableType");
var ModType_1 = require("./types/ModType");
var PowerUpType_1 = require("./types/PowerUpType");
var TeamType_1 = require("./types/TeamType");
var WeaponType_1 = require("./types/WeaponType");
var PlayerKillEvent = /** @class */ (function () {
    function PlayerKillEvent() {
    }
    PlayerKillEvent.fromQl = function (data) {
        var event = new PlayerKillEvent;
        event.matchGuid = data['MATCH_GUID'];
        event.mod = ModType_1.ModType[data['MOD']];
        event.otherTeamAlive = data['OTHER_TEAM_ALIVE'];
        event.otherTeamDead = data['OTHER_TEAM_DEAD'];
        event.round = data['ROUND'];
        event.suicide = data['SUICIDE'];
        event.teamKill = data['TEAMKILL'];
        event.teamAlive = data['TEAM_ALIVE'];
        event.teamDead = data['TEAM_DEAD'];
        event.time = data['TIME'];
        event.warmup = data['WARMUP'];
        event.killer = {
            airborne: data['KILLER']['AIRBORNE'],
            ammo: data['KILLER']['AMMO'],
            armor: data['KILLER']['ARMOR'],
            bot: data['KILLER']['BOT'],
            botSkill: data['KILLER']['BOT_SKILL'],
            health: data['KILLER']['HEALTH'],
            holdable: HoldableType_1.HoldableType[data['KILLER']['HOLDABLE']] || data['KILLER']['HOLDABLE'],
            name: data['KILLER']['NAME'],
            position: {
                x: data['KILLER']['POSITION']['X'],
                y: data['KILLER']['POSITION']['Y'],
                z: data['KILLER']['POSITION']['Z']
            },
            powerUps: data['KILLER']['POWERUPS'] instanceof Array ? data['KILLER']['POWERUPS'].map(function (powerUp) { return PowerUpType_1.PowerUpType[powerUp] || powerUp; }) : null,
            speed: data['KILLER']['SPEED'],
            steamId: data['KILLER']['STEAM_ID'],
            submerged: data['KILLER']['SUBMERGED'],
            team: data['KILLER']['TEAM'] == 0 ? TeamType_1.TeamType.FREE : data['KILLER']['TEAM'] == 1 ? TeamType_1.TeamType.RED : TeamType_1.TeamType.BLUE,
            view: {
                x: data['KILLER']['VIEW']['X'],
                y: data['KILLER']['VIEW']['Y'],
                z: data['KILLER']['VIEW']['Z']
            },
            weapon: WeaponType_1.WeaponType[data['KILLER']['WEAPON']] || data['KILLER']['WEAPON']
        };
        event.victim = {
            airborne: data['VICTIM']['AIRBORNE'],
            ammo: data['VICTIM']['AMMO'],
            armor: data['VICTIM']['ARMOR'],
            bot: data['VICTIM']['BOT'],
            botSkill: data['VICTIM']['BOT_SKILL'],
            health: data['VICTIM']['HEALTH'],
            holdable: HoldableType_1.HoldableType[data['VICTIM']['HOLDABLE']] || data['VICTIM']['HOLDABLE'],
            name: data['VICTIM']['NAME'],
            position: {
                x: data['VICTIM']['POSITION']['X'],
                y: data['VICTIM']['POSITION']['Y'],
                z: data['VICTIM']['POSITION']['Z']
            },
            powerUps: data['VICTIM']['POWERUPS'] instanceof Array ? data['VICTIM']['POWERUPS'].map(function (powerUp) { return PowerUpType_1.PowerUpType[powerUp] || powerUp; }) : null,
            speed: data['VICTIM']['SPEED'],
            steamId: data['VICTIM']['STEAM_ID'],
            streak: data['VICTIM']['STREAK'],
            submerged: data['VICTIM']['SUBMERGED'],
            team: data['VICTIM']['TEAM'] == 0 ? TeamType_1.TeamType.FREE : data['VICTIM']['TEAM'] == 1 ? TeamType_1.TeamType.RED : TeamType_1.TeamType.BLUE,
            view: {
                x: data['VICTIM']['VIEW']['X'],
                y: data['VICTIM']['VIEW']['Y'],
                z: data['VICTIM']['VIEW']['Z']
            },
            weapon: WeaponType_1.WeaponType[data['VICTIM']['WEAPON']] || data['VICTIM']['WEAPON']
        };
        return event;
    };
    return PlayerKillEvent;
}());
exports.PlayerKillEvent = PlayerKillEvent;

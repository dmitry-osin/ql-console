/// <reference types="node" />
import { EventEmitter } from 'events';
import MatchReportEvent from './stats/MatchReportEvent';
import MatchStartedEvent from './stats/MatchStartedEvent';
import PlayerConnectEvent from './stats/PlayerConnectEvent';
import PlayerDeathEvent from './stats/PlayerDeathEvent';
import PlayerDisconnectEvent from './stats/PlayerDisconnectEvent';
import PlayerKillEvent from './stats/PlayerKillEvent';
import PlayerMedalEvent from './stats/PlayerMedalEvent';
import PlayerStatsEvent from './stats/PlayerStatsEvent';
import PlayerSwitchTeamEvent from './stats/PlayerSwitchTeamEvent';
import RoundOverEvent from './stats/RoundOverEvent';
import { ZeroMq } from 'zeromq-ts';
export default class Stats extends ZeroMq {
    events: EventEmitter;
    constructor(address: string, password?: string);
    onMatchReport(listener: (event: MatchReportEvent) => void): void;
    onMatchStarted(listener: (event: MatchStartedEvent) => void): void;
    onPlayerConnect(listener: (event: PlayerConnectEvent) => void): void;
    onPlayerDeath(listener: (event: PlayerDeathEvent) => void): void;
    onPlayerDisconnect(listener: (event: PlayerDisconnectEvent) => void): void;
    onPlayerKill(listener: (event: PlayerKillEvent) => void): void;
    onPlayerMedal(listener: (event: PlayerMedalEvent) => void): void;
    onPlayerStats(listener: (event: PlayerStatsEvent) => void): void;
    onPlayerSwitchTeam(listener: (event: PlayerSwitchTeamEvent) => void): void;
    onRoundOver(listener: (event: RoundOverEvent) => void): void;
}

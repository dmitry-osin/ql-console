/// <reference types="node" />
import { EventEmitter } from 'events';
import { MatchReportEvent, MatchStartedEvent, PlayerConnectEvent, PlayerDeathEvent, PlayerDisconnectEvent, PlayerKillEvent, PlayerMedalEvent, PlayerStatsEvent, PlayerSwitchTeamEvent, RoundOverEvent } from 'ql-stats-model';
import { SocketOptions, ZeroMq } from 'zeromq-ts';
export default class Stats extends ZeroMq {
    events: EventEmitter;
    constructor(address: string, password?: string, options?: SocketOptions);
    onRawQlEvent(listener: (event: any) => void): void;
    onMatchReport(listener: (event: MatchReportEvent) => void): void;
    onMatchStarted(listener: (event: MatchStartedEvent) => void): void;
    onPlayerConnect(listener: (event: PlayerConnectEvent) => void): void;
    onPlayerDeath(listener: (event: PlayerDeathEvent) => void): void;
    onPlayerDisconnect(listener: (event: PlayerDisconnectEvent) => void): void;
    onPlayerKill(listener: (event: PlayerKillEvent) => void): void;
    onPlayerMedal(listener: (event: PlayerMedalEvent) => void): void;
    onPlayerStats(listener: (event: PlayerStatsEvent) => void): void;
    onPlayerSwitchTeam(listener: (event: PlayerSwitchTeamEvent) => void): void;
    onRoundOver(listener: (event: RoundOverEvent) => void): void;
}
